# not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4394d54d-b90c-42fa-801c-a154274d2bee";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-c53574ae-595a-4e12-9ebb-a56e363c5a8b".device = "/dev/disk/by-uuid/c53574ae-595a-4e12-9ebb-a56e363c5a8b";

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/6C02-F411";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/6d753828-9b57-42ff-8d0b-8bade0af213d";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
